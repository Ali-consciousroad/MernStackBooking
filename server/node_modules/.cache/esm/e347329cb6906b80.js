let express,readdirSync,cors,mongoose;_b69‍.w("express",[["default",["express"],function(v){express=v}]]);_b69‍.w("fs",[["readdirSync",["readdirSync"],function(v){readdirSync=v}]]);_b69‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_b69‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);//const express = require("express");

//import router from './routes/auth';

// Import middleware module so ou app can connect to MongoDB (needed because our front and back are working on different ports)


// Print the route in the console in dev mode
// This way of importing morgan give a warning in the console
// import morgan from "morgan";
require('dotenv').config();
const morgan = require("morgan");

const app = express ();

// db connection
mongoose 
    .connect(process.env.DATABASE, {
        useNewUrlParser: true,
        useFindAndModify: false,
        useUnifiedTopology: true,
        useCreateIndex: true,
    })
    .then(() => console.log("DB connected"))
    .catch((err) => _b69‍.g.console.log("DB Connection Error: ", err));

// middlewares
// app.use(cors());
app.use(morgan("dev"));
app.use(exress.json());

// Route middleware
readdirSync("./routes").map((r) => app.use("/api", require(`./routes/${r}`)));
//app.use("/api", router);

// Create a port variable and access the value from the .env file
const port = process.env.PORT || 8000;

app.listen(port, () => console.log(`Server is running on port ${port}`));